{"version":3,"sources":["utils/handleGraphStyle.js","utils/handleGraphTheme.js","utils/handleGraphProps.js","Graph/AreaGraph.jsx","Graph/BarGraph.jsx","Graph/LineGraph.jsx","Graph/PieGraph.jsx","Graph/RadarGraph.jsx","Graph/PolarBarGraph.jsx","Graph/CubicBarGraph.jsx","index.js"],"names":["handleGraphStyle","props","styles","width","height","params","i","length","param","undefined","indexOf","theme","handleGraphTheme","handleGraphProps","xAxis","yAxis","encode","layout","type","x","y","AreaGraph","config","option","dataset","source","category","data","title","text","graphName","tooltip","series","areaStyle","color","echarts","graphic","LinearGradient","offset","smooth","seriesLayoutBy","style","defaultProps","legend","BarGraph","barName","LineGraph","console","log","PieGraph","RadarGraph","forEach","item","index","obj","name","value","push","radar","indicator","normal","PolarBarGraph","axisLabel","textStyle","fontSize","margin","axisLine","show","axisTick","boundaryGap","splitLine","lineStyle","symbolSize","symbolOffset","z","itemStyle","barWidth","barGap","symbolPosition","CubicBarGraph","CubeLeft","extendShape","shape","buildPath","ctx","xAxisPoint","c0","c1","c2","c3","moveTo","lineTo","closePath","CubeRight","c4","CubeTop","registerShape","top","left","grid","right","bottom","containLabel","alignWithLabel","renderItem","api","location","coord","children","xValue","yValue","fill","max","label","position","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3a2fe4a7.chunk.js","sourcesContent":["function handleGraphStyle(props) {\r\n    const styles = {\r\n        width: '100%',\r\n        height: '400px'\r\n    };\r\n\r\n    const params = [\"width\", \"height\"];\r\n\r\n    for (let i = 0; i < params.length; i++) {\r\n        let param = params[i];\r\n        if (props[param] !== undefined) {\r\n            if (typeof props[param] === 'string' && (props[param].indexOf(\"%\") !== -1 || props[param].indexOf(\"px\") !== -1)) {\r\n                styles[param] = props[param];\r\n            } else {\r\n                styles[param] = props[param] + 'px';\r\n            }\r\n        }\r\n    }\r\n\r\n    let theme = props.theme;\r\n    if (theme !== \"light\" && theme !== \"dark\") {\r\n        theme = \"light\";\r\n    }\r\n\r\n    return styles\r\n}\r\n\r\nexport default handleGraphStyle","function handleGraphTheme(props) {\r\n    let theme = props.theme;\r\n    if (theme !== \"light\" && theme !== \"dark\") {\r\n        theme = \"light\";\r\n    }\r\n\r\n    return theme\r\n}\r\n\r\nexport default handleGraphTheme","import handleGraphStyle from \"./handleGraphStyle\";\r\nimport handleGraphTheme from \"./handleGraphTheme\";\r\n\r\nfunction handleGraphProps(props) {\r\n    let xAxis;\r\n    let yAxis;\r\n    let encode;\r\n    if (props.layout !== 'column') {\r\n        xAxis = {};\r\n        yAxis = {type: 'category'};\r\n        encode = {\r\n            x: 1,\r\n            y: 0\r\n        }\r\n    } else {\r\n        xAxis = {type: 'category'};\r\n        yAxis = {};\r\n        encode = {\r\n            x: 0,\r\n            y: 1\r\n        }\r\n    }\r\n\r\n    const styles = handleGraphStyle(props);\r\n    const theme = handleGraphTheme(props);\r\n\r\n    return {\r\n        xAxis,\r\n        yAxis,\r\n        encode,\r\n        styles,\r\n        theme\r\n    }\r\n}\r\n\r\nexport default handleGraphProps","import React from 'react';\r\nimport ReactEcharts from \"echarts-for-react\";\r\nimport PropTypes from 'prop-types'\r\nimport echarts from 'echarts'\r\nimport handleGraphProps from \"../utils/handleGraphProps\";\r\n\r\nfunction AreaGraph(props)  {\r\n    const config = handleGraphProps(props);\r\n\r\n    const option = {\r\n        dataset: {\r\n            source: [\r\n                props.category,\r\n                props.data\r\n            ]\r\n        },\r\n        title: {\r\n            text: props.graphName\r\n        },\r\n        tooltip: {},\r\n        xAxis: config.xAxis,\r\n        yAxis: config.yAxis,\r\n        series: [\r\n            {\r\n                type: 'line',\r\n                areaStyle:{\r\n                    color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\r\n                        offset: 0,\r\n                        color: '#00c1de'\r\n                    }, {\r\n                        offset: 1,\r\n                        color: 'rgba(0,0,0,0)'\r\n                    }]),\r\n                },\r\n                color:\"#42bff4\",//折线图颜色\r\n                smooth:true,\r\n                seriesLayoutBy: 'row',\r\n                encode: config.encode\r\n            }\r\n        ]\r\n    };\r\n\r\n    return (\r\n        <ReactEcharts\r\n            option={option}\r\n            theme={config.theme}\r\n            style={config.styles}\r\n        />\r\n    )\r\n}\r\n\r\nAreaGraph.propTypes = {\r\n    category: PropTypes.array.isRequired,\r\n    data: PropTypes.array.isRequired,\r\n    graphName: PropTypes.string,\r\n    legend: PropTypes.array,\r\n    theme: PropTypes.string,\r\n    layout: PropTypes.string,\r\n    width: PropTypes.string | PropTypes.number,\r\n    height: PropTypes.string | PropTypes.number\r\n};\r\n\r\nAreaGraph.defaultProps = {\r\n    graphName: '',\r\n    yAxis: null,\r\n    legend: null,\r\n    theme: \"light\",\r\n    layout: 'column'\r\n};\r\n\r\nexport default AreaGraph","import React from 'react';\r\nimport ReactEcharts from \"echarts-for-react\";\r\nimport PropTypes from 'prop-types'\r\n\r\nimport handleGraphProps from \"../utils/handleGraphProps\";\r\n\r\nfunction BarGraph(props)  {\r\n    const config = handleGraphProps(props);\r\n\r\n    const option = {\r\n        dataset: {\r\n            source: [\r\n                props.category,\r\n                props.data\r\n            ]\r\n        },\r\n        title: {\r\n            text: props.graphName\r\n        },\r\n        tooltip: {},\r\n        xAxis: config.xAxis,\r\n        yAxis: config.yAxis,\r\n        series: [\r\n            {\r\n                type: 'bar',\r\n                seriesLayoutBy: 'row',\r\n                encode: config.encode\r\n            }\r\n        ]\r\n    };\r\n\r\n    return (\r\n        <ReactEcharts\r\n            option={option}\r\n            theme={config.theme}\r\n            style={config.styles}\r\n        />\r\n    )\r\n}\r\n\r\nBarGraph.propTypes = {\r\n    category: PropTypes.array.isRequired,\r\n    data: PropTypes.array.isRequired,\r\n    graphName: PropTypes.string,\r\n    legend: PropTypes.array,\r\n    theme: PropTypes.string,\r\n    layout: PropTypes.string,\r\n    width: PropTypes.string | PropTypes.number,\r\n    height: PropTypes.string | PropTypes.number\r\n};\r\n\r\nBarGraph.defaultProps = {\r\n    barName: '',\r\n    yAxis: null,\r\n    legend: null,\r\n    theme: \"light\",\r\n    layout: 'column'\r\n};\r\n\r\nexport default BarGraph","import React from 'react';\r\nimport ReactEcharts from \"echarts-for-react\";\r\nimport PropTypes from 'prop-types'\r\nimport handleGraphProps from '../utils/handleGraphProps'\r\n\r\nfunction LineGraph(props)  {\r\n    const config = handleGraphProps(props);\r\n    console.log(config);\r\n\r\n    const option = {\r\n        dataset: {\r\n            source: [\r\n                props.category,\r\n                props.data\r\n            ]\r\n        },\r\n        title: {\r\n            text: props.graphName\r\n        },\r\n        tooltip: {},\r\n        legend: props.legend,\r\n        xAxis: config.xAxis,\r\n        yAxis: config.yAxis,\r\n        series: [\r\n            {\r\n                type: 'line',\r\n                seriesLayoutBy: 'row',\r\n                encode: config.encode\r\n            }\r\n        ]\r\n    };\r\n\r\n    return (\r\n        <ReactEcharts\r\n            option={option}\r\n            theme={config.theme}\r\n            style={config.styles}\r\n        />\r\n    )\r\n}\r\n\r\nLineGraph.propTypes = {\r\n    category: PropTypes.array.isRequired,\r\n    data: PropTypes.array.isRequired,\r\n    graphName: PropTypes.string,\r\n    legend: PropTypes.array,\r\n    theme: PropTypes.string,\r\n    layout: PropTypes.string,\r\n    width: PropTypes.string | PropTypes.number,\r\n    height: PropTypes.string | PropTypes.number\r\n};\r\n\r\nLineGraph.defaultProps = {\r\n    graphName: '',\r\n    yAxis: null,\r\n    legend: null,\r\n    theme: \"light\",\r\n    layout: 'column'\r\n};\r\n\r\nexport default LineGraph","import React from 'react'\r\nimport ReactEcharts from \"echarts-for-react\";\r\nimport PropTypes from 'prop-types'\r\n\r\nimport handleGraphStyle from \"../utils/handleGraphStyle\";\r\nimport handleGraphTheme from \"../utils/handleGraphTheme\";\r\n\r\nfunction PieGraph(props) {\r\n    const option = {\r\n        dataset: {\r\n            source: [\r\n                props.category,\r\n                props.data\r\n            ]\r\n        },\r\n        tooltip: {},\r\n        title: {\r\n            text: props.graphName\r\n        },\r\n        series: [\r\n            {\r\n                type: 'pie',\r\n                seriesLayoutBy: 'row'\r\n            }\r\n        ]\r\n    };\r\n\r\n    const theme = handleGraphTheme(props);\r\n    const styles = handleGraphStyle(props);\r\n\r\n    return <ReactEcharts\r\n            option={option}\r\n            theme={theme}\r\n            style={styles}\r\n           />\r\n}\r\n\r\nPieGraph.propTypes = {\r\n    category: PropTypes.array.isRequired,\r\n    data: PropTypes.array.isRequired,\r\n    graphName: PropTypes.string,\r\n    theme: PropTypes.string,\r\n    width: PropTypes.string | PropTypes.number,\r\n    height: PropTypes.string | PropTypes.number\r\n};\r\n\r\nPieGraph.defaultProps = {\r\n    theme: 'light',\r\n    graphName: ''\r\n};\r\n\r\nexport default PieGraph","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport ReactEcharts from \"echarts-for-react\"\r\n\r\nfunction RadarGraph(props) {\r\n    const data = [];\r\n\r\n    props.category.forEach((item, index) => {\r\n        let obj = {};\r\n        obj.name = item;\r\n        obj.value = props.data[index];\r\n        data.push(obj);\r\n    });\r\n\r\n    const option = {\r\n        title: {\r\n            text: props.graphName\r\n        },\r\n        tooltip: {},\r\n        // dataset\r\n        radar: {\r\n          indicator: props.indicator\r\n        },\r\n        series: {\r\n            type: 'radar',\r\n            areaStyle: {\r\n                normal: {}\r\n            },\r\n            data: data\r\n        }\r\n    };\r\n\r\n    return <ReactEcharts option={option} />\r\n}\r\n\r\nRadarGraph.propTypes = {\r\n    category: PropTypes.array.isRequired,\r\n    data: PropTypes.array.isRequired,\r\n    indicator: PropTypes.array.isRequired,\r\n    graphName: PropTypes.string\r\n};\r\n\r\nRadarGraph.defaultProps = {\r\n    graphName: \"\"\r\n};\r\n\r\nexport default RadarGraph","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport ReactEcharts from \"echarts-for-react\";\r\nimport echarts from 'echarts'\r\nimport handleGraphStyle from \"../utils/handleGraphStyle\";\r\nimport handleGraphTheme from \"../utils/handleGraphTheme\";\r\n\r\nfunction PolarBarGraph(props) {\r\n    const option = {\r\n        title: {\r\n            text: props.graphName\r\n        },\r\n        tooltip: {},\r\n        xAxis: [{\r\n            data: props.category,\r\n            axisLabel: {\r\n                textStyle: {\r\n                    color: '#aaaaaa',\r\n                    fontSize:14\r\n                },\r\n                margin: 30, //刻度标签与轴线之间的距离。\r\n            },\r\n            axisLine: {\r\n                show: false //不显示x轴\r\n            },\r\n            axisTick: {\r\n                show: false //不显示刻度\r\n            },\r\n            boundaryGap: true,\r\n        }],\r\n        yAxis: [\r\n            {\r\n                splitLine: {\r\n                    show: false,\r\n                    lineStyle: {\r\n                        color: '#eee',\r\n                        type: 'solid'\r\n                    }\r\n                },\r\n                axisTick: {\r\n                    show: false\r\n                },\r\n                axisLine: {\r\n                    show: false\r\n                },\r\n                axisLabel: {\r\n                    textStyle: {\r\n                        color: '#888'\r\n                    },\r\n                }\r\n            }\r\n        ],\r\n        series: [\r\n            {//柱底圆片\r\n                name: \"\",\r\n                type: \"pictorialBar\",\r\n                symbolSize: [60, 22],//调整截面形状\r\n                symbolOffset: [0, 10],\r\n                z: 12,\r\n                itemStyle: {\r\n                    \"normal\": {\r\n                        color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\r\n                            offset: 0,\r\n                            color: \"rgba(89,211,255,1)\"\r\n                        },\r\n                            {\r\n                                offset: 1,\r\n                                color: \"rgba(23,237,194,1)\"\r\n                            }\r\n                        ])\r\n                    }\r\n                },\r\n                data: props.data\r\n            },\r\n\r\n            //柱体\r\n            {\r\n                name: '',\r\n                type: 'bar',\r\n                barWidth: 60,\r\n                barGap: '0%',\r\n                itemStyle: {\r\n                    \"normal\": {\r\n                        \"color\": {\r\n                            \"x\": 0,\r\n                            \"y\": 0,\r\n                            \"x2\": 0,\r\n                            \"y2\": 1,\r\n                            \"type\": \"linear\",\r\n                            \"global\": false,\r\n                            \"colorStops\": [{//第一节下面\r\n                                \"offset\": 0,\r\n                                \"color\": \"rgba(0,255,245,0.5)\"\r\n                            }, {\r\n                                \"offset\": 1,\r\n                                \"color\": \"#43bafe\"\r\n                            }]\r\n                        }\r\n                    }\r\n                },\r\n\r\n                data: props.data\r\n            },\r\n\r\n            //柱顶圆片\r\n            {\r\n                name: \"\",\r\n                type: \"pictorialBar\",\r\n                symbolSize: [60, 22],//调整截面形状\r\n                symbolOffset: [0, -10],\r\n                z: 12,\r\n                symbolPosition: \"end\",\r\n                \"itemStyle\": {\r\n                    \"normal\": {\r\n                        color: new echarts.graphic.LinearGradient(0,0,0,1,\r\n                            [{\r\n                                offset: 0,\r\n                                color: \"rgba(89,211,255,1)\"\r\n                            },\r\n                                {\r\n                                    offset: 1,\r\n                                    color: \"rgba(23,237,194,1)\"\r\n                                }\r\n                            ],\r\n                            false\r\n                        ),\r\n                    }\r\n                },\r\n                data: props.data\r\n            }\r\n        ]\r\n    };\r\n\r\n    const styles = handleGraphStyle(props);\r\n    const theme = handleGraphTheme(props);\r\n\r\n    return <ReactEcharts\r\n        option={option}\r\n        style={styles}\r\n        theme={theme}\r\n    />\r\n}\r\n\r\nPolarBarGraph.propTypes = {\r\n    category: PropTypes.array.isRequired,\r\n    data: PropTypes.array.isRequired,\r\n    graphName: PropTypes.string,\r\n    width: PropTypes.string | PropTypes.number,\r\n    height: PropTypes.string | PropTypes.number,\r\n    theme: PropTypes.string\r\n};\r\n\r\nPolarBarGraph.defaultProps = {\r\n    graphName: '',\r\n    theme: 'light'\r\n};\r\n\r\nexport default PolarBarGraph\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport echarts from 'echarts'\r\nimport ReactEcharts from \"echarts-for-react\";\r\nimport handleGraphStyle from \"../utils/handleGraphStyle\";\r\nimport handleGraphTheme from \"../utils/handleGraphTheme\";\r\n\r\nfunction CubicBarGraph(props) {\r\n    const styles = handleGraphStyle(props);\r\n    const theme = handleGraphTheme(props);\r\n    const CubeLeft = echarts.graphic.extendShape({\r\n        shape: {\r\n            x: 0,\r\n            y: 0\r\n        },\r\n        buildPath: function(ctx, shape) {\r\n            const xAxisPoint = shape.xAxisPoint;\r\n            const c0 = [shape.x, shape.y];\r\n            const c1 = [shape.x - 9, shape.y - 9];\r\n            const c2 = [xAxisPoint[0] - 9, xAxisPoint[1] - 9];\r\n            const c3 = [xAxisPoint[0], xAxisPoint[1]];\r\n            ctx.moveTo(c0[0], c0[1]).lineTo(c1[0], c1[1]).lineTo(c2[0], c2[1]).lineTo(c3[0], c3[1]).closePath();\r\n        }\r\n    });\r\n\r\n    const CubeRight = echarts.graphic.extendShape({\r\n        shape: {\r\n            x: 0,\r\n            y: 0\r\n        },\r\n        buildPath: function(ctx, shape) {\r\n            const xAxisPoint = shape.xAxisPoint;\r\n            const c1 = [shape.x, shape.y];\r\n            const c2 = [xAxisPoint[0], xAxisPoint[1]];\r\n            const c3 = [xAxisPoint[0] + 18, xAxisPoint[1] - 9];\r\n            const c4 = [shape.x + 18, shape.y - 9];\r\n            ctx.moveTo(c1[0], c1[1]).lineTo(c2[0], c2[1]).lineTo(c3[0], c3[1]).lineTo(c4[0], c4[1]).closePath();\r\n        }\r\n    });\r\n\r\n    const CubeTop = echarts.graphic.extendShape({\r\n        shape: {\r\n            x: 0,\r\n            y: 0\r\n        },\r\n        buildPath: function(ctx, shape) {\r\n            const c1 = [shape.x, shape.y];\r\n            const c2 = [shape.x + 18, shape.y - 9];\r\n            const c3 = [shape.x + 9, shape.y - 18];\r\n            const c4 = [shape.x - 9, shape.y - 9];\r\n            ctx.moveTo(c1[0], c1[1]).lineTo(c2[0], c2[1]).lineTo(c3[0], c3[1]).lineTo(c4[0], c4[1]).closePath();\r\n        }\r\n    });\r\n\r\n    echarts.graphic.registerShape('CubeLeft', CubeLeft);\r\n    echarts.graphic.registerShape('CubeRight', CubeRight);\r\n    echarts.graphic.registerShape('CubeTop', CubeTop);\r\n    const option = {\r\n        title: {\r\n            text: props.graphName,\r\n            top: 32,\r\n            left: 18\r\n        },\r\n        grid: {\r\n            left: 20,\r\n            right: 40,\r\n            bottom: '19%',\r\n            top: 107,\r\n            containLabel: true\r\n        },\r\n        xAxis: {\r\n            type: 'category',\r\n            data: props.category,\r\n            offset: 20,\r\n            axisTick: {\r\n                show: false,\r\n                length: 9,\r\n                alignWithLabel: true,\r\n                lineStyle: {\r\n                    color: '#7DFFFD'\r\n                }\r\n            },\r\n            axisLabel: {\r\n                fontSize: 10\r\n            }\r\n        },\r\n        yAxis: {\r\n            type: 'value',\r\n            splitLine: {\r\n                show: false\r\n            },\r\n            axisTick: {\r\n                show: false\r\n            },\r\n            axisLabel: {\r\n                fontSize: 16\r\n            },\r\n            boundaryGap: ['20%', '20%']\r\n        },\r\n        series: [{\r\n            type: 'custom',\r\n            renderItem: function(params, api) {\r\n                const location = api.coord([api.value(0), api.value(1)])\r\n                return {\r\n                    type: 'group',\r\n                    children: [{\r\n                        type: 'CubeLeft',\r\n                        shape: {\r\n                            api,\r\n                            xValue: api.value(0),\r\n                            yValue: api.value(1),\r\n                            x: location[0],\r\n                            y: location[1],\r\n                            xAxisPoint: api.coord([api.value(0), 0])\r\n                        },\r\n                        style: {\r\n                            fill: 'rgba(7,29,97,.6)'\r\n                        }\r\n                    }, {\r\n                        type: 'CubeRight',\r\n                        shape: {\r\n                            api,\r\n                            xValue: api.value(0),\r\n                            yValue: api.value(1),\r\n                            x: location[0],\r\n                            y: location[1],\r\n                            xAxisPoint: api.coord([api.value(0), 0])\r\n                        },\r\n                        style: {\r\n                            fill: 'rgba(10,35,108,.7)'\r\n                        }\r\n                    }, {\r\n                        type: 'CubeTop',\r\n                        shape: {\r\n                            api,\r\n                            xValue: api.value(0),\r\n                            yValue: api.value(1),\r\n                            x: location[0],\r\n                            y: location[1],\r\n                            xAxisPoint: api.coord([api.value(0), 0])\r\n                        },\r\n                        style: {\r\n                            fill: 'rgba(11,42,106,.8)'\r\n                        }\r\n                    }]\r\n                }\r\n            },\r\n            data: props.max\r\n        }, {\r\n            type: 'custom',\r\n            renderItem: (params, api) => {\r\n                const location = api.coord([api.value(0), api.value(1)]);\r\n                return {\r\n                    type: 'group',\r\n                    children: [{\r\n                        type: 'CubeLeft',\r\n                        shape: {\r\n                            api,\r\n                            xValue: api.value(0),\r\n                            yValue: api.value(1),\r\n                            x: location[0],\r\n                            y: location[1],\r\n                            xAxisPoint: api.coord([api.value(0), 0])\r\n                        },\r\n                        style: {\r\n                            fill: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\r\n                                offset: 0,\r\n                                color: '#3B80E2'\r\n                            },\r\n                                {\r\n                                    offset: 1,\r\n                                    color: '#49BEE5'\r\n                                }\r\n                            ])\r\n                        }\r\n                    }, {\r\n                        type: 'CubeRight',\r\n                        shape: {\r\n                            api,\r\n                            xValue: api.value(0),\r\n                            yValue: api.value(1),\r\n                            x: location[0],\r\n                            y: location[1],\r\n                            xAxisPoint: api.coord([api.value(0), 0])\r\n                        },\r\n                        style: {\r\n                            fill: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\r\n                                offset: 0,\r\n                                color: '#3B80E2'\r\n                            },\r\n                                {\r\n                                    offset: 1,\r\n                                    color: '#49BEE5'\r\n                                }\r\n                            ])\r\n                        }\r\n                    }, {\r\n                        type: 'CubeTop',\r\n                        shape: {\r\n                            api,\r\n                            xValue: api.value(0),\r\n                            yValue: api.value(1),\r\n                            x: location[0],\r\n                            y: location[1],\r\n                            xAxisPoint: api.coord([api.value(0), 0])\r\n                        },\r\n                        style: {\r\n                            fill: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\r\n                                offset: 0,\r\n                                color: '#3B80E2'\r\n                            },\r\n                                {\r\n                                    offset: 1,\r\n                                    color: '#49BEE5'\r\n                                }\r\n                            ])\r\n                        }\r\n                    }]\r\n                }\r\n            },\r\n            data: props.data\r\n        }, {\r\n            type: 'bar',\r\n            label: {\r\n                normal: {\r\n                    show: true,\r\n                    position: 'top',\r\n                    fontSize: 16,\r\n                    color: 'black',\r\n                    offset: [4, -25]\r\n                }\r\n            },\r\n            itemStyle: {\r\n                color: 'transparent'\r\n            },\r\n            data: props.max\r\n        }]\r\n    };\r\n\r\n    return <ReactEcharts\r\n        option={option}\r\n        style={styles}\r\n        theme={theme}\r\n    />\r\n}\r\n\r\nCubicBarGraph.propTypes = {\r\n    category: PropTypes.array.isRequired,\r\n    data: PropTypes.array.isRequired,\r\n    max: PropTypes.array.isRequired,\r\n    graphName: PropTypes.string,\r\n    width: PropTypes.string | PropTypes.number,\r\n    height: PropTypes.string | PropTypes.number,\r\n    theme: PropTypes.string\r\n};\r\n\r\nCubicBarGraph.defaultProps = {\r\n    graphName: '',\r\n    theme: 'light'\r\n};\r\n\r\nexport default CubicBarGraph","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport AreaGraph from \"./Graph/AreaGraph\";\nimport BarGraph from \"./Graph/BarGraph\";\nimport LineGraph from \"./Graph/LineGraph\";\nimport PieGraph from \"./Graph/PieGraph\";\nimport RadarGraph from \"./Graph/RadarGraph\";\nimport PolarBarGraph from \"./Graph/PolarBarGraph\";\nimport CubicBarGraph from \"./Graph/CubicBarGraph\";\n\nconst category = ['教职人员', '学生', '家长', '管理人员', '就业人员', '下岗人员'];\nconst data = [200, 150, 250, 175, 100, 60];\nconst indicator = [\n    {\n        name: 'points',\n        max: 30\n    }, {\n        name: 'rebounds',\n        max: 10\n    }, {\n        name: 'assists',\n        max: 10\n    }, {\n        name: 'steals',\n        max: 2\n    }, {\n        name: 'blocks',\n        max: 2\n    }\n];\nconst players = ['LeBron James', 'Dwyane Wade'];\nconst scores = [\n    [28.0, 8.4, 6.1, 1.9, 0.8],\n    [22.3, 5.0, 4.5, 1.7, 1.3]\n];\n\nconst max = [300, 300, 300, 300, 300, 300];\n\nReactDOM.render(\n  <React.StrictMode>\n    <AreaGraph category={category}\n              data={data}\n              graphName={'Area Graph'}\n              layout={'column'}\n              width={'100%'}\n              height={400}\n    />\n    <BarGraph category={category}\n             data={data}\n             graphName={'Bar Graph'}\n             layout={'column'}\n             width={'100%'}\n             height={400}\n    />\n  <LineGraph category={category}\n             data={data}\n             graphName={'Line Graph'}\n             layout={'column'}\n             width={'100%'}\n             height={400}\n  />\n  <PieGraph data={data}\n            category={category}\n            graphName={'PieGraph'}\n            width={'100%'}\n            height={400}\n  />\n  <RadarGraph\n    indicator={indicator}\n    category={players}\n    data={scores}\n    graphName={'Radar Graph'}\n  />\n  <PolarBarGraph\n    category={category}\n    data={data}\n    graphName={'PolarBar Graph'}\n    width={'60%'}\n    height={600}\n    // theme={'dark'}\n  />\n  <CubicBarGraph\n    category={category}\n    data={data}\n    max={max}\n    height={600}\n    width={'80%'}\n    graphName={'CubicBar Graph'}\n  />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}